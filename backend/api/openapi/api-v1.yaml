openapi: 3.0.0
info:
  title: Open Source ERP API
  description: Api schema for ERP backend.
  version: 0.0.1

servers:
  - url: http://localhost:8080/api/v1
    description: dev url
paths:
  /auth:
    post:
      summary: Get auth token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserRequest"
      responses:
        "201":
          description: Token Created
  /users:
    get:
      summary: Get a list of users
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Page number of the users list
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of users per page
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultiUsersResponse"
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
      responses:
        "201":
          description: New user created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleUserResponse"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /users/{userId}:
    get:
      summary: Get a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A single user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleUserResponse"
    put:
      summary: Update a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
      responses:
        "200":
          description: User updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"

    delete:
      summary: Delete a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: User deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"

components:
  schemas:
    LoginUserRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: "john.smith@email.com"
          x-oapi-codegen-extra-tags:
            validate: email
        password:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "min=8,matches=^[a-zA-Z0-9]*$"

    UserRequest:
      type: object
      required:
        - username
        - email
        - password
        - status
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
          example: "johnsmith1"
          x-oapi-codegen-extra-tags:
            validate: string
        firstName:
          type: string
          example: "john"
          x-oapi-codegen-extra-tags:
            validate: string
        lastName:
          type: string
          example: "smith"
          x-oapi-codegen-extra-tags:
            validate: string
        email:
          type: string
          format: email
          example: "johnsmith@email.com"
          x-oapi-codegen-extra-tags:
            validate: email
        password:
          type: string
          example: "johnsmith@email.com"
          x-oapi-codegen-extra-tags:
            validate: string
        status:
          type: string
          enum: [active, inactive]
          x-oapi-codegen-extra-tags:
            validate: oneOf=active,inactive
        role:
          type: string
          enum: [admin, user, manager]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
          example: "johnsmith1"
        firstName:
          type: string
          example: "john"
        lastName:
          type: string
          example: "smith"
        email:
          type: string
          format: email
          example: "johnsmith@email.com"
        status:
          type: string
          enum: [active, inactive]
        role:
          type: string
          enum: [admin, user, manager]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    ApiResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          oneOf:
            - type: object
            - type: array
              items:
                type: object
          nullable: true
    SingleUserResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        data:
          $ref: "#/components/schemas/UserResponse"
    MultiUsersResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/UserResponse"
